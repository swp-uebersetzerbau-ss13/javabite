* m3 implementieren (structs,...)
* max stack korrekt berechnen (beachte jumps!)
* stack map table implementieren, damit auf -noverify verzichtet werden kann
* local variable table implementieren
* unnötige konstanten nicht in den constant pool eintragen, z.b. #1
* testen
* javadoc + zeilenkommentare + dokumentation 
* jclasslib einbinden?
* bis nächste woche: structs funktionieren?
* wie werden classfilees referenziert?
* package name!!!
* entferne stopTranslation!
* prog tests schreiben

OPTIMIEREN

* conditional branch optimieren

    beim conditional branch BRANCH lTrue lFalse bVal entsteht folgende Struktur:

       load bool
       ifne 4
       goto 6
    4: <<true>>
       goto 8
    6: <<false>>
    ...

    das liegt daran, dass zwei jumps gefordert sind. theoretisch müsste einer der 
    beiden jumps nicht gemacht werden, wenn das ziel direkt unter dem compare liegt.

    also:

    BRANCH lTrue lFalse bVal
    LABEL lTrue
    ...
    Label lFalse
    ...

    kann optimiert werden zu

    BRANCH ! lFalse bVal
    ...
    Label lFalse

* DECLARE und darauf folgendes ASSIGN verschmelzen
* Anzahl an temporären Variablen minimieren
